struct {
    char    id[4];
    uint32  numModels;
    uint32  offsetTextures;
    char    tag[4]<comment="should be 1, 0, 0, 0">;
} header;
struct {
    char    name[16];
    uint32  offset;
    float   translate[3];
    float   rotate[3];
    float   scale[3];
    int16   unknownA[8];
    int32   flags<format=hex,comment="0x80000000: objectId 1 else 0">;
    int16   unknownB[32];
} modelDescriptors[header.numModels];
local int i;
local uint32 offset;
local uint32 size;
for( i = 0; i < header.numModels; i++) {
    offset = startof(modelDescriptors[i]) + modelDescriptors[i].offset;
    FSeek(offset);
    if ( i == (header.numModels - 1) ){
        size = header.offsetTextures - offset;
    } else {
        size = startof(modelDescriptors[i+1]) + modelDescriptors[i+1].offset - offset;
    }
    struct {
        byte data[size];
    } model;
}
FSeek(header.offsetTextures);
struct {
    byte data[FileSize() - header.offsetTextures];
} textures;